<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="4" ignored="0" total="9" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="87907" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:33:29 EDT">
    <groups>
    </groups>
    <test name="Test" duration-ms="87907" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:33:29 EDT">
      <class name="testcases_testng.NewTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="beforeSuite" is-config="true" duration-ms="10" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testOne()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="testOne" duration-ms="8" started-at="2020-05-10T13:32:01 EDT" description="NewTest.testOne" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOne -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testThree()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="testThree" duration-ms="2" started-at="2020-05-10T13:32:01 EDT" description="NewTest.testThree" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThree -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testTwo()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="testTwo" duration-ms="2" started-at="2020-05-10T13:32:01 EDT" description="NewTest.testTwo" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwo -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="afterClass" is-config="true" duration-ms="1" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:01 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-05-10T13:33:29 EDT" finished-at="2020-05-10T13:33:29 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testcases_testng.NewTest@30b8a058]" name="afterSuite" is-config="true" duration-ms="1" started-at="2020-05-10T13:33:29 EDT" finished-at="2020-05-10T13:33:29 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testcases_testng.NewTest -->
      <class name="testcases_testng.TestcaseTwo_browserOnce">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcases_testng.TestcaseTwo_browserOnce@5d76b067]" name="beforeClass" is-config="true" duration-ms="7580" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:08 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="checkValidUsername()[pri:1, instance:testcases_testng.TestcaseTwo_browserOnce@5d76b067]" name="checkValidUsername" duration-ms="46896" started-at="2020-05-10T13:32:08 EDT" description="TestCaseTwo.check Valid Username" finished-at="2020-05-10T13:32:55 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:968)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases_testng.TestcaseTwo_browserOnce.checkValidUsername(TestcaseTwo_browserOnce.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidUsername -->
        <test-method status="FAIL" signature="checkErrorOnWrongCredetial()[pri:2, instance:testcases_testng.TestcaseTwo_browserOnce@5d76b067]" name="checkErrorOnWrongCredetial" duration-ms="15516" started-at="2020-05-10T13:32:55 EDT" description="TestCaseTwo.check Error on wrong  credentials" finished-at="2020-05-10T13:33:11 EDT">
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[invalid session id
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-JEI8AS0O', ip: '192.168.99.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_211'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.138, chrome: {chromedriverVersion: 81.0.4044.69 (6813546031a4b..., userDataDir: C:\Users\fakhr\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51033}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: e727ca878e97f7b4b6d2240eb406e2e3
*** Element info: {Using=css selector, value=[type='submit']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-JEI8AS0O', ip: '192.168.99.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_211'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.138, chrome: {chromedriverVersion: 81.0.4044.69 (6813546031a4b..., userDataDir: C:\Users\fakhr\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51033}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: e727ca878e97f7b4b6d2240eb406e2e3
*** Element info: {Using=css selector, value=[type='submit']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElementsByCssSelector(RemoteWebDriver.java:424)
at org.openqa.selenium.By$ByCssSelector.findElements(By.java:441)
at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:311)
at org.openqa.selenium.support.pagefactory.ByAll.findElement(ByAll.java:53)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.AjaxElementLocator.access$001(AjaxElementLocator.java:39)
at org.openqa.selenium.support.pagefactory.AjaxElementLocator$SlowLoadingElement.isLoaded(AjaxElementLocator.java:165)
at org.openqa.selenium.support.ui.SlowLoadableComponent.get(SlowLoadableComponent.java:51)
at org.openqa.selenium.support.pagefactory.AjaxElementLocator.findElement(AjaxElementLocator.java:95)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy15.click(Unknown Source)
at pages.LoginPage.clickOnLoginButton(LoginPage.java:69)
at testcases_testng.TestcaseTwo_browserOnce.checkErrorOnWrongCredetial(TestcaseTwo_browserOnce.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorOnWrongCredetial -->
        <test-method status="SKIP" signature="checkWelcomeMessage()[pri:3, instance:testcases_testng.TestcaseTwo_browserOnce@5d76b067]" name="checkWelcomeMessage" duration-ms="0" started-at="2020-05-10T13:33:11 EDT" description="TestCaseTwo.check Welcome Message" depends-on-methods="testcases_testng.TestcaseTwo_browserOnce.checkValidUsername" finished-at="2020-05-10T13:33:11 EDT">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestcaseTwo_browserOnce.checkWelcomeMessage()[pri:3, instance:testcases_testng.TestcaseTwo_browserOnce@5d76b067] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestcaseTwo_browserOnce.checkWelcomeMessage()[pri:3, instance:testcases_testng.TestcaseTwo_browserOnce@5d76b067] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWelcomeMessage -->
        <test-method status="FAIL" signature="afterClass()[pri:0, instance:testcases_testng.TestcaseTwo_browserOnce@5d76b067]" name="afterClass" is-config="true" duration-ms="2014" started-at="2020-05-10T13:33:11 EDT" finished-at="2020-05-10T13:33:13 EDT">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:45254
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-JEI8AS0O', ip: '192.168.99.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_211'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:45254
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-JEI8AS0O', ip: '192.168.99.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_211'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:452)
at testcases_testng.TestcaseTwo_browserOnce.afterClass(TestcaseTwo_browserOnce.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:64)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:364)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:318)
at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:217)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:130)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:45254
at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247)
at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)
at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)
at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)
at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)
at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
at okhttp3.RealCall.execute(RealCall.java:77)
at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
... 17 more
Caused by: java.net.ConnectException: Connection refused: connect
at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
at java.net.Socket.connect(Socket.java:589)
at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)
at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)
... 37 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testcases_testng.TestcaseTwo_browserOnce -->
      <class name="testcases_testng.TestcaseOne">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases_testng.TestcaseOne@7d0587f1]" name="beforeMethod" is-config="true" duration-ms="8326" started-at="2020-05-10T13:32:01 EDT" finished-at="2020-05-10T13:32:09 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test1()[pri:0, instance:testcases_testng.TestcaseOne@7d0587f1]" name="test1" duration-ms="61430" started-at="2020-05-10T13:32:09 EDT" description="TestCaseOne.validate Valid User" finished-at="2020-05-10T13:33:10 EDT">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at testcases_testng.TestcaseOne.test1(TestcaseOne.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.TestcaseOne@7d0587f1]" name="afterMethod" is-config="true" duration-ms="733" started-at="2020-05-10T13:33:10 EDT" finished-at="2020-05-10T13:33:11 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases_testng.TestcaseOne@7d0587f1]" name="beforeMethod" is-config="true" duration-ms="5122" started-at="2020-05-10T13:33:11 EDT" finished-at="2020-05-10T13:33:16 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:testcases_testng.TestcaseOne@7d0587f1]" name="test2" duration-ms="3641" started-at="2020-05-10T13:33:16 EDT" description="TestCaseOne.validate Valid User Logout" finished-at="2020-05-10T13:33:20 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.TestcaseOne@7d0587f1]" name="afterMethod" is-config="true" duration-ms="686" started-at="2020-05-10T13:33:20 EDT" finished-at="2020-05-10T13:33:21 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases_testng.TestcaseOne@7d0587f1]" name="beforeMethod" is-config="true" duration-ms="7201" started-at="2020-05-10T13:33:21 EDT" finished-at="2020-05-10T13:33:28 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test3()[pri:0, instance:testcases_testng.TestcaseOne@7d0587f1]" name="test3" duration-ms="1" started-at="2020-05-10T13:33:28 EDT" description="TestCaseOne.validate Not implemented" finished-at="2020-05-10T13:33:28 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not yet implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not yet implemented
at org.junit.Assert.fail(Assert.java:88)
at testcases_testng.TestcaseOne.test3(TestcaseOne.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.TestcaseOne@7d0587f1]" name="afterMethod" is-config="true" duration-ms="718" started-at="2020-05-10T13:33:28 EDT" finished-at="2020-05-10T13:33:29 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testcases_testng.TestcaseOne -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
