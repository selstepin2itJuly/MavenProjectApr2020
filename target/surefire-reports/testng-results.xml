<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="2" ignored="0" total="9" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="56310" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:43:09 EDT">
    <groups>
    </groups>
    <test name="Test" duration-ms="56310" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:43:09 EDT">
      <class name="testcases_testng.NewTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="beforeSuite" is-config="true" duration-ms="17" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="beforeTest" is-config="true" duration-ms="0" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="beforeClass" is-config="true" duration-ms="0" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testOne()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="testOne" duration-ms="1" started-at="2020-05-10T14:42:13 EDT" description="NewTest.testOne" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOne -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testThree()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="testThree" duration-ms="0" started-at="2020-05-10T14:42:13 EDT" description="NewTest.testThree" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThree -->
        <test-method status="PASS" signature="testTwo()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="testTwo" duration-ms="0" started-at="2020-05-10T14:42:13 EDT" description="NewTest.testTwo" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwo -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="afterMethod" is-config="true" duration-ms="0" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="afterClass" is-config="true" duration-ms="1" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:42:13 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="afterTest" is-config="true" duration-ms="0" started-at="2020-05-10T14:43:09 EDT" finished-at="2020-05-10T14:43:09 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testcases_testng.NewTest@589838eb]" name="afterSuite" is-config="true" duration-ms="1" started-at="2020-05-10T14:43:09 EDT" finished-at="2020-05-10T14:43:09 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testcases_testng.NewTest -->
      <class name="testcases_testng.TestcaseTwo_browserOnce">
        <test-method status="PASS" signature="beforeClass(java.lang.String)[pri:0, instance:testcases_testng.TestcaseTwo_browserOnce@1ce92674]" name="beforeClass" is-config="true" duration-ms="4194" started-at="2020-05-10T14:42:43 EDT" finished-at="2020-05-10T14:42:47 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="FAIL" signature="checkValidUsername()[pri:1, instance:testcases_testng.TestcaseTwo_browserOnce@1ce92674]" name="checkValidUsername" duration-ms="20590" started-at="2020-05-10T14:42:47 EDT" description="TestCaseTwo.check Valid Username" finished-at="2020-05-10T14:43:08 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at testcases_testng.TestcaseTwo_browserOnce.checkValidUsername(TestcaseTwo_browserOnce.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidUsername -->
        <test-method status="PASS" signature="checkErrorOnWrongCredetial()[pri:2, instance:testcases_testng.TestcaseTwo_browserOnce@1ce92674]" name="checkErrorOnWrongCredetial" duration-ms="953" started-at="2020-05-10T14:43:08 EDT" description="TestCaseTwo.check Error on wrong  credentials" finished-at="2020-05-10T14:43:09 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorOnWrongCredetial -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testcases_testng.TestcaseTwo_browserOnce@1ce92674]" name="afterClass" is-config="true" duration-ms="704" started-at="2020-05-10T14:43:09 EDT" finished-at="2020-05-10T14:43:09 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="checkWelcomeMessage()[pri:3, instance:testcases_testng.TestcaseTwo_browserOnce@1ce92674]" name="checkWelcomeMessage" duration-ms="0" started-at="2020-05-10T14:43:09 EDT" description="TestCaseTwo.check Welcome Message" depends-on-methods="testcases_testng.TestcaseTwo_browserOnce.checkValidUsername" finished-at="2020-05-10T14:43:09 EDT">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestcaseTwo_browserOnce.checkWelcomeMessage()[pri:3, instance:testcases_testng.TestcaseTwo_browserOnce@1ce92674] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestcaseTwo_browserOnce.checkWelcomeMessage()[pri:3, instance:testcases_testng.TestcaseTwo_browserOnce@1ce92674] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:101)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWelcomeMessage -->
      </class> <!-- testcases_testng.TestcaseTwo_browserOnce -->
      <class name="testcases_testng.TestcaseOne">
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:testcases_testng.TestcaseOne@7085bdee]" name="beforeMethod" is-config="true" duration-ms="8497" started-at="2020-05-10T14:42:13 EDT" finished-at="2020-05-10T14:42:21 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:testcases_testng.TestcaseOne@7085bdee]" name="test1" duration-ms="4496" started-at="2020-05-10T14:42:21 EDT" description="TestCaseOne.validate Valid User" finished-at="2020-05-10T14:42:26 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.TestcaseOne@7085bdee]" name="afterMethod" is-config="true" duration-ms="700" started-at="2020-05-10T14:42:26 EDT" finished-at="2020-05-10T14:42:27 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:testcases_testng.TestcaseOne@7085bdee]" name="beforeMethod" is-config="true" duration-ms="5119" started-at="2020-05-10T14:42:27 EDT" finished-at="2020-05-10T14:42:32 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:testcases_testng.TestcaseOne@7085bdee]" name="test2" duration-ms="4992" started-at="2020-05-10T14:42:32 EDT" description="TestCaseOne.validate Valid User Logout" finished-at="2020-05-10T14:42:37 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.TestcaseOne@7085bdee]" name="afterMethod" is-config="true" duration-ms="1225" started-at="2020-05-10T14:42:37 EDT" finished-at="2020-05-10T14:42:38 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.String)[pri:0, instance:testcases_testng.TestcaseOne@7085bdee]" name="beforeMethod" is-config="true" duration-ms="4117" started-at="2020-05-10T14:42:38 EDT" finished-at="2020-05-10T14:42:42 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="test3()[pri:0, instance:testcases_testng.TestcaseOne@7085bdee]" name="test3" duration-ms="1" started-at="2020-05-10T14:42:42 EDT" description="TestCaseOne.validate Not implemented" finished-at="2020-05-10T14:42:42 EDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Not yet implemented]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Not yet implemented
at org.junit.Assert.fail(Assert.java:88)
at testcases_testng.TestcaseOne.test3(TestcaseOne.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testcases_testng.TestcaseOne@7085bdee]" name="afterMethod" is-config="true" duration-ms="665" started-at="2020-05-10T14:42:42 EDT" finished-at="2020-05-10T14:42:43 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testcases_testng.TestcaseOne -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
